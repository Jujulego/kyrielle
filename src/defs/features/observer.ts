import { Unsubscribable } from './unsubscribable.js';

/**
 * Object receiving data from an observable.
 */
export interface Observer<in D = unknown> {
  /**
   * Called with subscription generated by subscribe calls.
   * @param subscription
   */
  readonly start?: (subscription: Unsubscribable) => void;

  /**
   * Called with each emitted value
   * @param data
   */
  next(data: D): void;

  /**
   * Called when an error occurs in the observable
   * @param err
   */
  error(err: unknown): void;

  /**
   * Called when the observable completes. No other data or error will then be received.
   */
  complete(): void;
}

export type PartialObserver<in D = unknown> = { [K in keyof Observer<D>]?: Observer<D>[K] | undefined };